/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import br.edu.ifsul.cc.lpoo_studiodanca.dao.PersistenciaJPA;
import br.edu.ifsul.cc.lpoo_studiodanca.dao.model.Modalidade;
import java.awt.event.*;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author debor
 */
public class TelaModalidades extends JFrame {

    //private JList<String> lstModalidades;
    //private JButton btnNovo;
    private JPanel panelMain;
    private JButton btnEditar;
    private JButton btnRemover;

    /**
     * Creates new form TelaModalidades
     */
    public TelaModalidades() {
        setTitle("Modalidades");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setContentPane(panelMain);
        setLocationRelativeTo(null);

        btnNovo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String descricao = JOptionPane.showInputDialog("Insira a descrição da nova modalidade:");
                if (descricao != null && !descricao.trim().isEmpty()) {
                    Modalidade novaModalidade = new Modalidade();
                    novaModalidade.setDescricao(descricao);
                    PersistenciaJPA persistenciaJPA = new PersistenciaJPA();
                    persistenciaJPA.persist(novaModalidade);
                    atualizarListaModalidades();
                }
            }
        });

        atualizarListaModalidades();

        btnEditar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String descricaoSelecionada = lstModalidades.getSelectedValue();
                if (descricaoSelecionada != null) {
                    String novaDescricao = JOptionPane.showInputDialog("Edite a descrição da modalidade:", descricaoSelecionada);
                    if (novaDescricao != null && !novaDescricao.trim().isEmpty()) {
                        PersistenciaJPA persistenciaJPA = new PersistenciaJPA();
                        Modalidade modalidade = persistenciaJPA.getModalidadeByDescricao(descricaoSelecionada);
                        modalidade.setDescricao(novaDescricao);
                        persistenciaJPA.update(modalidade);
                        atualizarListaModalidades();
                    }
                }
            }
        });

        btnRemover.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String descricaoSelecionada = lstModalidades.getSelectedValue();
                if (descricaoSelecionada != null) {
                    int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover a modalidade?", "Confirmação", JOptionPane.YES_NO_OPTION);
                    if (confirmacao == JOptionPane.YES_OPTION) {
                        PersistenciaJPA persistenciaJPA = new PersistenciaJPA();
                        Modalidade modalidade = persistenciaJPA.getModalidadeByDescricao(descricaoSelecionada);
                        persistenciaJPA.remove(modalidade);
                        atualizarListaModalidades();
                    }
                }
            }
        });

    }

    private void atualizarListaModalidades() {
        PersistenciaJPA persistenciaJPA = new PersistenciaJPA();
        List<Modalidade> modalidades = persistenciaJPA.getModalidades();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Modalidade modalidade : modalidades) {
            listModel.addElement(modalidade.getDescricao());
        }
        lstModalidades.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstModalidades = new javax.swing.JList<>();
        btnNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setText("Modalidades:");

        lstModalidades.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstModalidades);

        btnNovo.setText("Adicionar modalidade");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNovo)
                    .addComponent(titulo)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNovo)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaModalidades().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNovo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstModalidades;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
